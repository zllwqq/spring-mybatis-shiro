<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.zllwqq.mapper.SysUserMapper">
	<resultMap id="BaseResultMap" type="com.github.zllwqq.entity.SysUser">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="organization_id" jdbcType="BIGINT" property="organizationId" />
		<result column="username" jdbcType="VARCHAR" property="username" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="salt" jdbcType="VARCHAR" property="salt" />
		<result column="role_ids" jdbcType="VARCHAR" property="roleIds" />
		<result column="locked" jdbcType="BIT" property="locked" />
	</resultMap>
	<sql id="Base_Column_List">
		id, organization_id, username, password, salt, role_ids,
		locked
	</sql>

	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where id = #{id,jdbcType=BIGINT}
	</select>

	<select id="selectByUsername" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where username = #{username}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		sys_user
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.github.zllwqq.entity.SysUser">
		insert into sys_user (id,
		organization_id, username,
		password, salt, role_ids,
		locked)
		values
		(#{id,jdbcType=BIGINT}, #{organizationId,jdbcType=BIGINT},
		#{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{salt,jdbcType=VARCHAR}, #{roleIds,jdbcType=VARCHAR},
		#{locked,jdbcType=BIT})
	</insert>
	<insert id="insertSelective" parameterType="com.github.zllwqq.entity.SysUser">
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="organizationId != null">
				organization_id,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="salt != null">
				salt,
			</if>
			<if test="roleIds != null">
				role_ids,
			</if>
			<if test="locked != null">
				locked,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="organizationId != null">
				#{organizationId,jdbcType=BIGINT},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				#{salt,jdbcType=VARCHAR},
			</if>
			<if test="roleIds != null">
				#{roleIds,jdbcType=VARCHAR},
			</if>
			<if test="locked != null">
				#{locked,jdbcType=BIT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.github.zllwqq.entity.SysUser">
		update sys_user
		<set>
			<if test="organizationId != null">
				organization_id = #{organizationId,jdbcType=BIGINT},
			</if>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				salt = #{salt,jdbcType=VARCHAR},
			</if>
			<if test="roleIds != null">
				role_ids = #{roleIds,jdbcType=VARCHAR},
			</if>
			<if test="locked != null">
				locked = #{locked,jdbcType=BIT},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.github.zllwqq.entity.SysUser">
		update sys_user
		set organization_id = #{organizationId,jdbcType=BIGINT},
		username =
		#{username,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		salt = #{salt,jdbcType=VARCHAR},
		role_ids =
		#{roleIds,jdbcType=VARCHAR},
		locked = #{locked,jdbcType=BIT}
		where id =
		#{id,jdbcType=BIGINT}
	</update>
</mapper>